<Application x:Class="EmployeeManagementSystem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:EmployeeManagementSystem"
             xmlns:Views="clr-namespace:EmployeeManagementSystem.Views"
             xmlns:VM="clr-namespace:EmployeeManagementSystem.ViewModels"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <!--<local:Bootstrapper x:Key="bootstrapper"/>-->
                </ResourceDictionary>

                <ResourceDictionary>
                    <DataTemplate DataType="{x:Type VM:EmployeeViewModel}">
                        <Views:EmployeeView/>
                    </DataTemplate>
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary>
                    <Style x:Key="IconButtonStyle" BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Width" Value="18" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger
            Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
            Value="True">
                                <Setter Property="Foreground" Value="White" />
                            </DataTrigger>
                            <DataTrigger
            Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}"
            Value="True">
                                <Setter Property="Foreground" Value="Black" />
                            </DataTrigger>
                            
                        </Style.Triggers>
                    </Style>
                    <Style  TargetType="{x:Type TextBox}">
                        <Setter Property="FontFamily"  Value="sans-serif" />
                        <Setter Property="FontSize"    Value="14" />
                        <Setter Property="Foreground"    Value="Black" />
                        <Setter Property="Height"    Value="30" />
                        <Setter Property="Width"    Value="300" />
                        <Setter Property="Padding"    Value="4" />
                        <Setter Property="TextAlignment"    Value="Left" />
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                        <Setter Property="HorizontalAlignment"    Value="Left" />
                        <Setter Property="VerticalAlignment"    Value="Center" />
                        <Setter Property="Margin"    Value="5" />
                        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip"  Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
                        <Setter Property="FontFamily"  Value="sans-serif" />
                        <Setter Property="FontSize"    Value="14" />
                        <Setter Property="Foreground"    Value="White" />
                        <Setter Property="Height"    Value="40" />
                        <Setter Property="Width"    Value="120" />
                        <Setter Property="VerticalAlignment"    Value="Bottom" />
                        <Setter Property="Cursor"    Value="Hand" />
                    </Style>
                    <Style BasedOn="{StaticResource ResourceKey=ButtonStyle3}" TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Name="border" Background="{TemplateBinding Background}"  BorderThickness="1" CornerRadius="5">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="SteelBlue"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="#c1f0f0"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <!--<Setter Property="Background" TargetName="border" Value=" #46d2d2"/>-->
                                            <Setter Property="Background" TargetName="border" Value="RoyalBlue"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>

                        </Setter>
                        <Setter Property="Background"    Value="DodgerBlue" />
                    </Style>
                    <!--<Style x:Key="DatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">


                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                    <Grid>
                                        <Grid.Resources>
                                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                                        </Grid.Resources>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement"/>
                                                        <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="watermark_decorator"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="WatermarkStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unwatermarked"/>
                                                <VisualState x:Name="Watermarked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unfocused"/>
                                                <VisualState x:Name="Focused">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                            <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1" Visibility="Hidden"/>
                                                <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="1" Visibility="Hidden">
                                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                                </Border>
                                                <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip"  Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>-->
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <!--<Style TargetType="TextBox">
                <Setter Property="Width" Value="230"/>
            </Style>
            <Style x:Key="BoxText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource  MaterialDesignToolForeground}"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="PasswordBox">
                <Setter Property="Width" Value="230"/>
            </Style>
            <Style x:Key="BorderBox" TargetType="Border">
                <Setter Property="Margin" Value="10"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="Background" Value="{DynamicResource  PrimaryHueLightBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="5"/>
            </Style>-->
        </ResourceDictionary>

    </Application.Resources>
</Application>
